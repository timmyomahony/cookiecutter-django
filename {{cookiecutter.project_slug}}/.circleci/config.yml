version: 2
jobs:
  build-job:
    docker:
      - image: circleci/python:3.6
      - image: circleci/postgres:9.6.2
    environment:
      DATABASE_URL: postgres://root:@localhost/circle_test
      DJANGO_SECRET_KEY: test
      DJANGO_READ_DOT_ENV_FILE: False
      DJANGO_SETTINGS_MODULE: config.settings.test
    working_directory: ~/{{cookiecutter.project_slug}}
    steps:
      - checkout
      - restore_cache:
          key: v1_{{cookiecutter.project_slug}}-\{\{ .Branch \}\}-\{\{ checksum "requirements/test.txt" \}\}
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/test.txt
      - save_cache:
          key: v1_{{cookiecutter.project_slug}}-\{\{ .Branch \}\}-\{\{ checksum "requirements/test.txt" \}\}
          paths:
            - 'venv'
      - run:
          name: Add python project to path
          command: 'echo "$(realpath .)/{{cookiecutter.project_slug}}" > venv/lib/python3.6/site-packages/{{cookiecutter.project_slug}}.pth'
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python manage.py test
  deploy-job:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/{{cookiecutter.project_slug}}
    steps:
      - checkout
      - run:
          name: Deploy via Fabric
          command: |
            sudo pip install fabric
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              fab -f .circleci/deploy.py -i ~/.ssh/id_rsa production deploy
            else
              fab -f .circleci/deploy.py -i ~/.ssh/id_rsa staging deploy
            fi

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job:
          filters:
            branches:
              only:
                - master
                - develop
      - deploy-job:
          requires:
            - build-job
          filters:
            branches:
              only:
                - master
                - develop
